% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lm_count_mat.R
\name{lm_count_mat_emp_pval}
\alias{lm_count_mat_emp_pval}
\title{Wrapper function for differential expression analysis}
\usage{
lm_count_mat_emp_pval(
  count_matrix,
  pheno,
  trait,
  covariates_string,
  n_permute = 100,
  gene_IDs = NULL,
  log_transform = "log_replace_half_min",
  seed = NULL,
  stat_type = "t_stat",
  empirical_type = "storey",
  t_df = NULL,
  outcome_type = "continous"
)
}
\arguments{
\item{count_matrix}{A matrix of gene counts (possibly transformed). rows are genes, columns are individuals}

\item{pheno}{A data frame of phenotype data, includes the trait and covariates}

\item{trait}{A character, the name of the exposure variable. The trait should be a column in pheno}

\item{covariates_string}{Characters string with specifying the covariats, include "as.factor" statements. example: covariate_string = "age+as.factor(sex)"}

\item{n_permute}{number of computing residual permutation. Default is 100 times}

\item{gene_IDs}{A vector of selection of geneID, NULL if all genes are tested}

\item{log_transform}{One of the transformations log_replace_half_min, log_add_min, log_add_0.5, or NULL (default)}

\item{seed}{Random seed}

\item{stat_type}{Statistic type : p_value (quantile empirical pvalue), t_stat and chisq_stat (storey). Default is t_stat}

\item{empirical_type}{Type of empirical pvalue : quantile or storey. Default  is storey}

\item{t_df}{A vector of calculated t-statistic.Default is NULL}

\item{outcome_type}{continous and binary.Default is continous}
}
\value{
Linear regression results as a data frame with columns geneID, beta,se,t_stat (t-statistic),t_stat_df(degree of freedom) ,p_value, fdr_bh,,
        emp_pvals,bh_emp_pvals
}
\description{
The function is to calculate DEG (Differential Expression Genes) analysis using residual permuation approach to calculate empirical p-value
}
\examples{
set.seed(123)
library(qvalue)
library(dplyr)
data(phenotype)
data(rnaseq_count_matrix)
rnaseq_count_matrix<- rnaseq_count_matrix[rowSums(rnaseq_count_matrix)>0,]
trait<-"Trait.1"
covars<- "Age+Sex"
stat<-"t_stat"
empirical_type<-"storey"
lm_count_mat_emp_pval(count_matrix=rnaseq_count_matrix,pheno = phenotype,trait = trait,
                      covariates_string=covars, stat_type="t_stat",empirical_type="storey", outcome_type="continous")
}
